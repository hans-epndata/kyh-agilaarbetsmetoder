// <auto-generated />
using System;
using InvoiceStore.Contexts;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace InvoiceStore.Migrations
{
    [DbContext(typeof(DataContext))]
    [Migration("20231110101509_Invoices")]
    partial class Invoices
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.13")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("InvoiceStore.Models.Entitites.InvoiceEntity", b =>
                {
                    b.Property<int>("InvoiceNumber")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("InvoiceNumber"));

                    b.Property<string>("Billing_City")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Billing_Country")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Billing_PostalCode")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Billing_StreetName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CustomerName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CustomerNumber")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Delivery_City")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Delivery_Country")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Delivery_PostalCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Delivery_StreetName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("TotaltAmount")
                        .HasColumnType("money");

                    b.HasKey("InvoiceNumber");

                    b.ToTable("Invoices");
                });

            modelBuilder.Entity("InvoiceStore.Models.Entitites.InvoiceRowsEntity", b =>
                {
                    b.Property<int>("InvoiceNumber")
                        .HasColumnType("int");

                    b.Property<string>("ArticleNumber")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int?>("InvoiceEntityInvoiceNumber")
                        .HasColumnType("int");

                    b.Property<decimal>("Price")
                        .HasColumnType("money");

                    b.Property<int>("Quantity")
                        .HasColumnType("int");

                    b.HasKey("InvoiceNumber", "ArticleNumber");

                    b.HasIndex("InvoiceEntityInvoiceNumber");

                    b.ToTable("InvoiceRows");
                });

            modelBuilder.Entity("InvoiceStore.Models.Entitites.InvoiceRowsEntity", b =>
                {
                    b.HasOne("InvoiceStore.Models.Entitites.InvoiceEntity", null)
                        .WithMany("InvoiceRows")
                        .HasForeignKey("InvoiceEntityInvoiceNumber");
                });

            modelBuilder.Entity("InvoiceStore.Models.Entitites.InvoiceEntity", b =>
                {
                    b.Navigation("InvoiceRows");
                });
#pragma warning restore 612, 618
        }
    }
}
